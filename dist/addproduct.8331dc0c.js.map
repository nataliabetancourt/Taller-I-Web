{"mappings":"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","sources":["js/addProduct.js","js/functions/createProduct.js","js/utils/index.js"],"sourcesContent":["//Import functions needed\r\nimport { storage, db } from './app';\r\nimport { addProduct, uploadImages } from './functions/createProduct';\r\nimport { colors } from './utils';\r\n\r\n//Call html elements\r\nconst productForm = document.getElementById(\"productsForm\");\r\nconst productColors = document.getElementById(\"color\");\r\nconst colorBox = document.getElementById(\"colorBox\");\r\nconst container = document.querySelector('.rating');\r\nconst items = container.querySelectorAll('.rating-item');\r\n\r\nlet color;\r\nlet rating = \"No rating\";\r\nconst counter = 0;\r\n\r\nproductForm.category.addEventListener(\"change\", e => {\r\n    const productCategory = productForm.category.value;\r\n\r\n    //Get palette from category array\r\n    const { palette } = colors.find(color => color.category === productCategory);\r\n\r\n    //Create new array with html elements, based on color information\r\n    const colorsOption = palette.map((color) => {\r\n        return `<option value=\"${color.hex}\">${color.name}</option>`\r\n    });\r\n\r\n    //Set select with options\r\n    productColors.innerHTML = colorsOption;\r\n\r\n    productColors.addEventListener(\"change\", e => {\r\n        colorBox.style.backgroundColor = productColors.value;\r\n        const name = productColors.selectedOptions[0].text;\r\n        \r\n        console.log(productColors.value);\r\n        //Color object to add to firebase\r\n        color = {\r\n            name: name,\r\n            hex: productColors.value\r\n        }; \r\n    });\r\n});\r\n\r\ncontainer.addEventListener(\"click\", e => {\r\n    const elClass = e.target.classList;\r\n    // change the rating if the user clicks on a different star\r\n    if (!elClass.contains('active')) {\r\n         // reset the active class on the star\r\n        items.forEach(item => item.classList.remove('active'));\r\n\r\n        //add active class to the clicked star\r\n        rating = e.target.getAttribute(\"data-rate\");\r\n        elClass.add('active'); \r\n    }\r\n});\r\n\r\nproductForm.addEventListener(\"submit\", async (e) =>{\r\n    e.preventDefault();\r\n    console.log(\"clicked\");\r\n\r\n    //All the product object variables\r\n    const name = productForm.name.value;\r\n    const category = productForm.category.value;\r\n    const price = productForm.price.value;\r\n    const description = productForm.description.value;\r\n    const stock = productForm.stock.value;\r\n    const images = productForm.images.files;\r\n    \r\n    let imageGallery = []; \r\n\r\n    //Check if images is empty, if not, upload images to firebase storage\r\n    if (images.length) {\r\n        //Upload to firestore\r\n        const imagesUploaded = await uploadImages(storage, [...images]);\r\n\r\n        //Add to array\r\n        imageGallery = await Promise.all(imagesUploaded);\r\n    }\r\n\r\n    //Create product object\r\n    const newProduct = {\r\n        name, \r\n        category, \r\n        price, \r\n        description, \r\n        stock, \r\n        color,\r\n        rating,\r\n        images: imageGallery,\r\n        counter\r\n    }\r\n\r\n    //Add product to firestore database\r\n    await addProduct(db, newProduct);\r\n    productForm.reset();\r\n});","import { addDoc, collection } from \"firebase/firestore\";\r\nimport { ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\r\n\r\nasync function addProduct (db, product) {\r\n    try {\r\n        await addDoc(collection(db, \"products\"), product);\r\n        console.log(\"Product added\");\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nasync function imageUploadReference(storage, image) {\r\n    const storageRef = ref(storage, `products/images/${image.name}`);\r\n    return await uploadBytes(storageRef, image);\r\n}\r\n\r\nasync function uploadImages(storage, images = []) {\r\n    const uploadedImages = images.map( async (image) => {\r\n        const imgRef = await imageUploadReference(storage, image);\r\n        return getDownloadURL(ref(storage, imgRef.ref.fullPath));\r\n    });\r\n\r\n    return uploadedImages;\r\n}\r\n\r\nexport {\r\n    addProduct,\r\n    uploadImages\r\n}","//Colors from products and their categories\r\nconst colors = [\r\n    {\r\n        category: \"face\",\r\n        palette: [\r\n            {\r\n                name: \"None\",\r\n                hex: \"#ffffff\"\r\n            },\r\n            {\r\n                name: \"1 Cool\",\r\n                hex: \"#f4cfb5\"\r\n            },\r\n            {\r\n                name: \"4 Warm\",\r\n                hex: \"#ecbd8f\"\r\n            },\r\n            {\r\n                name: \"7 Neutral\",\r\n                hex: \"#cd9369\"\r\n            },\r\n            {\r\n                name: \"9 Cool\",\r\n                hex: \"#ca864f\"\r\n            },\r\n            {\r\n                name: \"12.5 Warm\",\r\n                hex: \"#ac6c40\"\r\n            },\r\n            {\r\n                name: \"15 Neutral\",\r\n                hex: \"#754626\"\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        category: \"cheek\",\r\n        palette: [\r\n            {\r\n                name: \"Romance light\",\r\n                hex: \"#c4867c\"\r\n            },\r\n            {\r\n                name: \"Medium bronze\",\r\n                hex: \"#ca906a\"\r\n            },\r\n            {\r\n                name: \"Tan bronze\",\r\n                hex: \"#bc7a51\"\r\n            },\r\n            {\r\n                name: \"Peachgasm\",\r\n                hex: \"#f58e7e\"\r\n            },\r\n            {\r\n                name: \"Pinkgasm\",\r\n                hex: \"#ed7d7e\"\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        category: \"eyes\",\r\n        palette: [\r\n            {\r\n                name: \"Super Black\",\r\n                hex: \"#090909\"\r\n            },\r\n            {\r\n                name: \"Pillow Talk\",\r\n                hex: \"#dd8d8a\"\r\n            },\r\n            {\r\n                name: \"Pillow Talk Dreams\",\r\n                hex: \"#82362b\"\r\n            },\r\n            {\r\n                name: \"The Sophisticate\",\r\n                hex: \"#ba8973\"\r\n            },\r\n            {\r\n                name: \"Copper Charge\",\r\n                hex: \"#c26f59\"\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        category: \"lips\",\r\n        palette: [\r\n            {\r\n                name: \"Scarlet Spell\",\r\n                hex: \"#8b2833\"\r\n            },\r\n            {\r\n                name: \"Pillow Talk\",\r\n                hex: \"#dc7b77\"\r\n            },\r\n            {\r\n                name: \"Lost Cherry\",\r\n                hex: \"#fd5d5f\"\r\n            },\r\n            {\r\n                name: \"Love Liberty\",\r\n                hex: \"#aa2937\"\r\n            },\r\n            {\r\n                name: \"Gold\",\r\n                hex: \"#dc7e53\"\r\n            }\r\n        ],\r\n    }\r\n];\r\n\r\nasync function addProductToBag(bag) {\r\n    localStorage.setItem(\"bag\", JSON.stringify(bag));\r\n};\r\n\r\nfunction getMyLocalBag() {\r\n    const myBag = localStorage.getItem(\"bag\");\r\n    return myBag ? JSON.parse(myBag) : [];\r\n}\r\n\r\nfunction deleteMyLocalBag() {\r\n    window.localStorage.removeItem('bag');\r\n}\r\n\r\nfunction currencyFormat(price) {\r\n    return new Intl.NumberFormat(\"en-UK\", {\r\n        style: 'currency',\r\n        currency: 'EUR',\r\n        minimumFractionDigits: 0\r\n    }).format(price);\r\n}\r\n\r\nexport {\r\n    addProductToBag, \r\n    getMyLocalBag,\r\n    deleteMyLocalBag,\r\n    currencyFormat,\r\n    colors\r\n}"],"names":["$6QD2Y","parcelRequire","$etBjH","async","$2b5671cbd5db21a7$export$633f5b6169e2b910","storage","images","map","image","imgRef","storageRef","$aYguL","ref","name","uploadBytes","$2b5671cbd5db21a7$var$imageUploadReference","getDownloadURL","fullPath","$d8be5cb91089582e$export$8f45430ccf837300","category","palette","hex","$631fe528d2bacc7d$var$productForm","document","getElementById","$631fe528d2bacc7d$var$productColors","$631fe528d2bacc7d$var$colorBox","$631fe528d2bacc7d$var$container","querySelector","$631fe528d2bacc7d$var$items","querySelectorAll","$631fe528d2bacc7d$var$color","$631fe528d2bacc7d$var$rating","addEventListener","e","productCategory","value","find","color","colorsOption","innerHTML","style","backgroundColor","selectedOptions","text","console","log","elClass","target","classList","contains","forEach","item","remove","getAttribute","add","preventDefault","price","description","stock","files","imageGallery","length","imagesUploaded","Promise","all","newProduct","db","product","addDoc","collection","error","$2b5671cbd5db21a7$export$7caf006d7b64ee15","reset"],"version":3,"file":"addproduct.8331dc0c.js.map"}